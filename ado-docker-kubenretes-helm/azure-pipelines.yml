trigger:
- main

variables:
  dockeRepository: vproapp
  containerRegistry: Azure-ACR
  kube-serviceConnection: kube-agent
  sonar-connection: sonar-k8s


pool: linux-agent


stages:
- stage: MavenBuild
  jobs:
  - job: MavenBuild
    steps:
    - task: Maven@4
      displayName: Maven Test
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'test'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@4
      displayName: Maven Verify
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'verify -DskipUnitTests'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@4
      displayName: Maven Package
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package -DskipUnitTests'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@4
      displayName: Maven Checkstyle
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'checkstyle:checkstyle'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: '**/*.war'
        TargetFolder: '$(Build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: SonarQubePrepare@5
      displayName: Sonar_Analysis
      inputs:
        SonarQube: '$(sonar-connection)'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'vprofile-repo'
        cliProjectName: 'vprofile-repo'
        cliSources: './src'
        extraProperties: |
          sonar.java.binaries=.

    - task: SonarQubeAnalyze@5
      inputs:
        jdkversion: 'JAVA_HOME'
    - task: SonarQubePublish@5
      displayName: QualityGate
      inputs:
        pollingTimeoutSec: '300'

    - task: Docker@2
      displayName: BuildDockerImage
      inputs:
        containerRegistry: '$(containerRegistry)'
        repository: '$(dockeRepository)'
        command: 'build'
        tags: '$(Build.BuildId)'
        Dockerfile: '**/Dockerfile'
        addPipelineData: false
        addBaseImageData: false
    - task: Docker@2
      displayName: PushImage_To_Azure_ACR
      inputs:
        containerRegistry: '$(containerRegistry)'
        repository: '$(dockeRepository)'
        command: 'push'
        tags: '$(Build.BuildId)'
        addPipelineData: false
        addBaseImageData: false

    - script: |
        docker rmi vproapp.azurecr.io/$(dockeRepository):$(Build.BuildId)

- stage: Deploy_To_AKS
  jobs:
  - job:
    steps:
    - task: HelmDeploy@0
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'Free Trial(d01f29a3-4c6f-413d-bddf-1e1efe751fdb)'
        azureResourceGroup: 'cicd-rg'
        kubernetesCluster: 'Aks-1'
        useClusterAdmin: true
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: './helm/vprofilechart'
        releaseName: 'ecommerce-app'
        waitForExecution: false
        arguments: '--set vproapp.image.repository=vproapp.azurecr.io/$(dockeRepository) 
                    --set vproapp.image.tag=$(Build.BuildId)  '

