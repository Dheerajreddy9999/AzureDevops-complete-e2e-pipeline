trigger:
- main

variables:
  dockeRepository: dheerajlearningdocker/vprofile-app
  containerRegistry: dockerRepo
  kube-serviceConnection: kube-agent
  sonar-connection: sonar-k8s


pool: linux-agent


stages:
- stage: MavenBuild
  jobs:
  - job: MavenBuild
    container:
      image: maven:3.8.6-openjdk-8-slim
      volumes:
        - 'maven_data:/root/.m2/repository'

    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'test'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'verify -DskipUnitTests'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
   
  - job: SonarAnalysis
    dependsOn: MavenBuild
    container:
      image: maven:3.8.6-openjdk-11-slim
      
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: '$(sonar-connection)'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'vprofile-repo'
        cliProjectName: 'vprofile-repo'
        cliSources: './src'
        extraProperties: |
          sonar.java.binaries=.
          
    - task: SonarQubeAnalyze@5
      inputs:
        jdkversion: 'JAVA_HOME'
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
  
- stage: BuildAndPushDockerImage

  jobs:
  - job: BuildDockerImage
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '$(containerRegistry)'
        repository: '$(dockeRepository)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: '$(Build.BuildId)'
        addPipelineData: false
        addBaseImageData: false
  - job: PushDockerImage
    dependsOn: BuildDockerImage
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '$(containerRegistry)'
        repository: '$(dockeRepository)'
        command: 'push'
        tags: '$(Build.BuildId)'
        addPipelineData: false
        addBaseImageData: false

    - script: |
        docker rmi $(dockeRepository):$(Build.BuildId)

- stage: DeployToDev
  jobs:
  - job:
    steps:
    - task: HelmDeploy@0
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: '$(kube-serviceConnection)'
        namespace: 'default'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: './helm/vprofilechart'
        releaseName: 'ecommerce-app'
        waitForExecution: false
        arguments: '--set vproapp.image.repository=$(dockeRepository) 
                    --set vproapp.image.tag=$(Build.BuildId)  '
   
